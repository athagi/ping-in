// Code generated by goagen v1.3.1, DO NOT EDIT.
//
// API "adder": uri Resource Client
//
// Command:
// $ goagen
// --design=ping-in/design
// --out=$(GOPATH)/src/github.com/athagi/src/ping-in
// --version=v1.3.1

package client

import (
	"context"
	"fmt"
	"net/http"
	"net/url"
)

// HostURIPath computes a request path to the host action of uri.
func HostURIPath(hostName string) string {
	param0 := hostName

	return fmt.Sprintf("/uri/host/%s", param0)
}

// add uri to check endpoint
func (c *Client) HostURI(ctx context.Context, path string) (*http.Response, error) {
	req, err := c.NewHostURIRequest(ctx, path)
	if err != nil {
		return nil, err
	}
	return c.Client.Do(ctx, req)
}

// NewHostURIRequest create the request corresponding to the host action endpoint of the uri resource.
func (c *Client) NewHostURIRequest(ctx context.Context, path string) (*http.Request, error) {
	scheme := c.Scheme
	if scheme == "" {
		scheme = "http"
	}
	u := url.URL{Host: c.Host, Scheme: scheme, Path: path}
	req, err := http.NewRequest("GET", u.String(), nil)
	if err != nil {
		return nil, err
	}
	return req, nil
}
